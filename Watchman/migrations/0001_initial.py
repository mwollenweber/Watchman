# Generated by Django 4.2.10 on 2024-09-21 18:02

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ActorRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "ip",
                    models.GenericIPAddressField(blank=True, db_index=True, null=True),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(db_index=True, max_length=255, unique=True)),
                ("is_active", models.BooleanField(db_index=True, default=False)),
                ("is_verified", models.BooleanField(db_index=True, default=False)),
                ("max_seats", models.IntegerField(default=0)),
                ("domain", models.CharField(db_index=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "domain",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("tld", models.CharField(db_index=True, max_length=255)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "is_new",
                    models.BooleanField(blank=True, db_index=True, default=True),
                ),
                ("exp_date", models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="NewDomain",
            fields=[
                (
                    "domain",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("tld", models.CharField(db_index=True, max_length=255)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "is_processed",
                    models.BooleanField(blank=True, db_index=True, default=False),
                ),
                ("is_expired", models.BooleanField(db_index=True, default=False)),
                ("meh", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Watch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "watch_type",
                    models.CharField(
                        choices=[
                            ("has-mx", "has-mx"),
                            ("http200", "http200"),
                            ("resolves", "resolves"),
                        ],
                        db_index=True,
                        max_length=255,
                    ),
                ),
                ("target", models.CharField(db_index=True, max_length=255)),
                ("expected", models.CharField(max_length=255)),
                ("config", models.JSONField(blank=True, null=True)),
                (
                    "last_updated",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(
                            2023, 9, 22, 18, 2, 47, 838058, tzinfo=datetime.timezone.utc
                        ),
                        null=True,
                    ),
                ),
                (
                    "last_ran",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(
                            2023, 9, 22, 18, 2, 47, 838065, tzinfo=datetime.timezone.utc
                        ),
                        null=True,
                    ),
                ),
                (
                    "update_interval",
                    models.IntegerField(
                        blank=True, db_index=True, default=1440, null=True
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(blank=True, db_index=True, default=True),
                ),
                (
                    "last_completed",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(
                            2023, 9, 22, 18, 2, 47, 838076, tzinfo=datetime.timezone.utc
                        ),
                        null=True,
                    ),
                ),
                (
                    "is_approved",
                    models.BooleanField(blank=True, db_index=True, default=True),
                ),
                (
                    "last_error",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(
                            2023, 9, 22, 18, 2, 47, 838084, tzinfo=datetime.timezone.utc
                        ),
                        null=True,
                    ),
                ),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="unknown",
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Watchman.client",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ZoneList",
            fields=[
                (
                    "name",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                (
                    "update_interval",
                    models.IntegerField(blank=True, default=28800, null=True),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(
                            2023, 9, 22, 18, 2, 47, 835994, tzinfo=datetime.timezone.utc
                        ),
                        null=True,
                    ),
                ),
                (
                    "last_completed",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(
                            2023, 9, 22, 18, 2, 47, 836463, tzinfo=datetime.timezone.utc
                        ),
                        null=True,
                    ),
                ),
                (
                    "last_diffed",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(
                            2023, 9, 22, 18, 2, 47, 836470, tzinfo=datetime.timezone.utc
                        ),
                        null=True,
                    ),
                ),
                (
                    "last_error",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(
                            2023, 9, 22, 18, 2, 47, 836475, tzinfo=datetime.timezone.utc
                        ),
                        null=True,
                    ),
                ),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="unknown",
                        max_length=32,
                        null=True,
                    ),
                ),
                ("enabled", models.BooleanField(db_index=True, default=True)),
                ("url", models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="WhoisRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "domain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Watchman.domain",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WebPage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fqdn",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                ("page", models.CharField(blank=True, db_index=True, null=True)),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "md5",
                    models.CharField(
                        blank=True, db_index=True, max_length=32, null=True
                    ),
                ),
                (
                    "size",
                    models.IntegerField(
                        blank=True, db_index=True, default=0, null=True
                    ),
                ),
                (
                    "status_code",
                    models.IntegerField(
                        blank=True, db_index=True, default=0, null=True
                    ),
                ),
                (
                    "ip",
                    models.GenericIPAddressField(blank=True, db_index=True, null=True),
                ),
                (
                    "domain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Watchman.domain",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WatchResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hit", models.CharField(db_index=True, max_length=255)),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "is_new",
                    models.BooleanField(blank=True, db_index=True, default=True),
                ),
                (
                    "is_reviewed",
                    models.BooleanField(blank=True, db_index=True, default=False),
                ),
                (
                    "is_fp",
                    models.BooleanField(blank=True, db_index=True, default=False),
                ),
                (
                    "watch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="Watchman.watch"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Search",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "database",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="newdomains",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("criteria", models.CharField(max_length=255)),
                ("tolerance", models.IntegerField(blank=True, default=0, null=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "last_updated",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(
                            2023, 9, 22, 18, 2, 47, 836751, tzinfo=datetime.timezone.utc
                        ),
                        null=True,
                    ),
                ),
                (
                    "last_ran",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(
                            2023, 9, 22, 18, 2, 47, 836758, tzinfo=datetime.timezone.utc
                        ),
                        null=True,
                    ),
                ),
                (
                    "update_interval",
                    models.IntegerField(
                        blank=True, db_index=True, default=1440, null=True
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(blank=True, db_index=True, default=True),
                ),
                (
                    "last_completed",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(
                            2023, 9, 22, 18, 2, 47, 836770, tzinfo=datetime.timezone.utc
                        ),
                        null=True,
                    ),
                ),
                (
                    "is_approved",
                    models.BooleanField(blank=True, db_index=True, default=True),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("regex", "regex"),
                            ("substring", "substring"),
                            ("strdistance", "strdistance"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Watchman.client",
                    ),
                ),
            ],
            options={
                "verbose_name": "Search",
                "verbose_name_plural": "Searches",
            },
        ),
        migrations.CreateModel(
            name="PingRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "fqdn",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                (
                    "ip",
                    models.GenericIPAddressField(blank=True, db_index=True, null=True),
                ),
                ("alive", models.BooleanField(db_index=True, default=True)),
                (
                    "domain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Watchman.domain",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MXRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "record",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                (
                    "ip",
                    models.GenericIPAddressField(blank=True, db_index=True, null=True),
                ),
                (
                    "domain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Watchman.domain",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hit", models.CharField(db_index=True, max_length=255)),
                (
                    "is_new",
                    models.BooleanField(blank=True, db_index=True, default=True),
                ),
                (
                    "is_reviewed",
                    models.BooleanField(blank=True, db_index=True, default=False),
                ),
                (
                    "is_fp",
                    models.BooleanField(blank=True, db_index=True, default=False),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                ("has_alerted", models.BooleanField(db_index=True, default=False)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Watchman.client",
                    ),
                ),
            ],
            options={
                "verbose_name": "Match",
                "verbose_name_plural": "Matches",
            },
        ),
        migrations.CreateModel(
            name="ClientUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "client",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Watchman.client",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClientAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[("slack", "slack"), ("email", "email"), ("s3", "s3")],
                        db_index=True,
                        max_length=255,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("last_run", models.DateTimeField(auto_now_add=True)),
                ("last_completed", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("config", models.JSONField(blank=True, null=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Watchman.client",
                    ),
                ),
            ],
        ),
    ]
